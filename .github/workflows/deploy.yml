name: CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run simple test
        run: |
          echo "Simulando pruebas"

  sonarqube-analysis:
            runs-on: ubuntu-latest
            needs: build-test
            steps:
              - name: Checkout repo
                uses: actions/checkout@v3
        
              - name: Install Java (requisito de SonarScanner)
                uses: actions/setup-java@v3
                with:
                  java-version: '17'
                  distribution: 'temurin'  # ‚úÖ ESTA L√çNEA ARREGLA EL ERROR
        
              - name: Download SonarScanner
                run: |
                  wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
                  unzip sonar-scanner-cli-5.0.1.3006-linux.zip
                  mv sonar-scanner-5.0.1.3006-linux sonar-scanner
        
              - name: Run SonarQube Scan
                env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                run: |
                  ./sonar-scanner/bin/sonar-scanner \
                    -Dsonar.projectKey=proyecto-devsecops \
                    -Dsonar.sources=. \
                    -Dsonar.host.url=http://localhost:9000 \
                    -Dsonar.login=${SONAR_TOKEN}
        

  security-scan:
    runs-on: ubuntu-latest
    needs: sonarqube-analysis
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          ignore-unfixed: true
          format: table
          output: trivy-results.txt
          severity: CRITICAL,HIGH

  validate-and-deploy:
    runs-on: ubuntu-latest
    needs: [security-scan]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Validar pol√≠ticas de despliegue
        run: |
          if grep -q "CRITICAL" trivy-results.txt; then
            echo "‚ùå Vulnerabilidades cr√≠ticas encontradas. Despliegue cancelado."
            exit 1
          else
            echo "‚úÖ Validaci√≥n superada: No hay vulnerabilidades cr√≠ticas."
          fi

      - name: Simular despliegue en entorno de pruebas
        run: echo "‚úî Desplegado exitosamente en entorno de pruebas"

      - name: Simular despliegue en producci√≥n
        run: echo "‚úî Desplegado exitosamente en entorno de producci√≥n simulado"

      - name: Monitoreo post-despliegue
        run: |
          echo "üü¢ Iniciando monitoreo de logs"
          echo "üü¢ Todo funciona correctamente. No se detectan anomal√≠as."
